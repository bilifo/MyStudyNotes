通过 GDB 能够对程序进行如下调试：(主要是对c系列的程序,shell和java不支持)
● 运行程序，还可以给程序加上某些参数，指定程序的行为。
● 使程序在特定的条件下停止。
● 检查程序停止时的运行状态。
● 改变程序的参数，以纠正程序中的错误。

步骤:
1/编译并构建程序，加上调试选项-g.  eg:gcc -g main.c -o test.out
2/用GDB来运行程序.  eg:gdb test.out
3/设置断点. eg:b main//在main函数入口处设置一个断点
4/运行到断点.  eg:run
5/查看信息.    eg:p vartest

需要使用 GDB 调试的程序，在编译的时候必须加-g 参数，开启调试信息

运行 GDB调试程序通常使用如下方式：
$ gdb <程序名称>

r----run,直接运行到断点处
b----breakpoint,设置一个断点.
	eg:
	b fun1//在fun1函数开始设置断点
	b 234//在234行设置断点
	b file.c:234//在源文件file.c的234行设置断点
d----delete,删除指定编号的某个断点,或删除所有断点.eg:d 1
c----continue,继续运行程序
f----function,运行直到某个函数时结束
s----step Into,步进调试.
s N----接下来N步进行步进调试
n----Step Over,步进调试,但和s不同的时,不进函数内部
p----print,输出某个变量的值,eg:p var//输出变量var的值
set----设置变量的值.eg:set var=123
bt----打印调用堆栈
i----info,显示各种信息
q----退出gdb调试
attach----绑定线程,对正在运行的程序进行调试.类似安卓的attach debug,通常和ps查询PID一起使用  eg:attch PID号

