re模块管理python对正则表达式的支持
例:
	import re
	表达式=r'.*.jpg'	或	表达式='.*.jpg'
	#有r表示这是个符合python定义的正则表达式,在遇到"\"来表达转义字符时,r'\t'和r'\n'就直接表示转义字符的含义,如果没有r,要表\t,就需要'\\t'来表示
	print(re.match(表达式))

方法:
	re.comple(r'.*.jpg')	
		返回一个正则表达式pattern
	re.match(pattern,检索的字符串,匹配方式)	
		从字符串一开始进行匹配,成功返回一个匹配对象,不然返回None
	re.search(pattern,检索的字符串,匹配方式)
		扫描整个字符串并返回第一个成功的匹配
	re.sub(pattern,repl替换的字符串或函数,检索的字符串,模式匹配后替换的最大次数,匹配方式)
		替换字符串中的匹配项
	re.findall(pattern,检索的字符串,匹配方式) 
		找到检索的字符串中所有的符合pattern的对象，添加到re中并返回
	re.finditer(pattern,检索的字符串,匹配方式) 
		和findall差不多,但返回的是个已经分组的迭代器,group()表全部,group(1)第一部分


匹配方式:
	re.I	使匹配对大小写不敏感
	re.L	做本地化识别（locale-aware）匹配
	re.M	多行匹配，影响 ^ 和 $
	re.S	使 . 匹配包括换行在内的所有字符
	re.U	根据Unicode字符集解析字符。这个标志影响 \w, \W, \b, \B.
	re.X	该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。

获得结果:
	patt=re.compile(r'<img src="http:(.*?[.jpg,.png])"')
	ma=re.findall(patt,html)
	正则表达式括号()中阔起来的,就是findall会返回的数据