接触:
	听说python在机器学习圈很火,而且做爬虫也十分简单.我一向喜欢那些隐藏起来的信息,因为它们最能接近真相

上路:
	python基础	菜鸟教程的python讲解
			Head_First_Python（中文版）
爬虫:
	在知乎上了解到python常用的爬虫模块:Scrapy
	实践后,发现静态网站能爬,却不能爬取动态网站

	简单的模拟用户方式:
		用PhantomJS(无界面浏览器)+selenum(网页模拟测试模块)来模拟打开网页,获取动态加载,虽然解决了动态网站无法获取xpath的问题,但效率真是不敢恭维	

	复杂的抓包方式:
		<一看就明白的爬虫入门讲解：基础理论篇>中的讲解	
		找到包含内容的js代码串，然后通过正则表达式获得相应的内容，而不是解析HTML标签
		
		当然,有的时候,数据的jsonAPI并不一定在代码中,得通过"审查元素"来看
		对于异步加载的json数据,查看XHR新添加项.
		对于像煎蛋一样的,只能通过看它的js代码来逆向

	(这期间,发现一个叫dSpider,用js来写的客户端爬虫库,没接触)
	
	urllib+正则：无第三方依赖
	requests+BeautifulSoup：第三方library
	scrapy：框架
	由难到易

多线程:

分布式:


数据存储:
	