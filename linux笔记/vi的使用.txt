vi目前多被vim取代,如果vi进入一般模式,右下有显示光标所在行数,即vim
 Vim 确实很优秀, 但是在当今的环境下, 完全使用 Vim 作为开发工具不太现实, 即使使用 Vim, 更多的是使用它的编辑功能, 开发的话, 更依赖别的 IDE.
 别妄图将它打造为ide
vi模式
	一般模式
		改变光标位置,进行删除,复制,粘贴操作
		移动:n方向键,移动到光标方向n行/或字符,G跳到最后一行,1G移动到首行,nG移动到n行
		删除:x后删,X前删,dd删除整行,ndd删除光标下n行
		复制:yy复制整行,nyy复制光标下n行,yG复制光标到最后一行的数据,y1G复制光标到第一行的数据,y0复制光标到行首的数据,y$复制光标到行尾的数据
		粘贴:p后粘贴,P前粘贴

	编辑模式
		在一般模式下按"i(前插),a(后插),o(下一行插入),r(替换,R为一直替换)"进入编辑模式.
		按v(V是整行选择)进入文本选择
	复制/粘贴/查询/删除/替换
	查询:一般模式下 输入"/",再输入要查询的词.n向下查找,N向下上查找.
		vim的正则表达式和一般的有点小区别,为了和一般的正则表达式保持一致,要写\v来保证去除差异eg: /v(a.c){3} 用来匹配abc acc什么的,但是对于断言,还是不要尝试了,很怪,不友好
	删除:一般模式下 输入x(删除后面一个字符),X(删除前面一个字符)

	命令行模式
		在一般模式下按":,/,?"进入命令行模式,!表强制执行
			:w	保存
			:q	离开vi
			:n	编辑下一个文件
			:N	编辑上一个文件
			:files	列出目前用vi打开的文件
			:sp 	同一个文件进行拆分,如果sp后面接不同的文件路径,就会拆分显示另一个文件内容.ctrl+w+上下键切换光标处于那个窗口,q退出
vi编辑时,其实是在一个同名的.swp缓存文件上进行,保存后提交对应内容到编辑文件上.如果遭遇意外关闭文件的情况,再次编辑该文件时,R加载缓存文件,D删除缓存文件

vi配置:
	手动创建~/.vimrc文件,在里面进行配置vim

" 号后面的内容为注释
set表示开启某个设置
:map 相关的命令可以定义自己的快捷键
	:map :noremap 普通模式下, 可视模式
	:nmap :nnoremap 普通模式下
	:xmap :xnoremap 可视模式下
	:cmap :cnoremap 命令模式下
	:imap :inoremap 插入模下
	如:

let 前置键,先按下前置键, 松开后再按别的按键, 就可以形成一套快捷键.默认是"\"键,

中文编码问题:


vim配合插件打造源码阅读器:
1/ctags插件(代码阅读工具)
sudo apt-get install ctags
2/Taglist插件(显示当前文件中的变量和函数)
去 https://sourceforge.net/projects/vim-taglist/files/vim-taglist/ 下载zip
里面有两个目录，分别为doc和plugin,分别将两个目录下的文件复制到vim目录里面的doc和plugin即可
unzip taglist_46.zip
cp taglist_46/doc/taglist.txt /usr/share/vim/vim74/doc/
cp taglist_46/plugin/taglist.vim /usr/share/vim/vim74/plugin/

3/SrcExpl 插件(进行搜索功能)
去 https://www.vim.org/scripts/script.php?script_id=2179 下载zip
unzip SrcExpl-6.0.zip
cp SrcExpl-6.0/doc/srcexpl.txt /usr/share/vim/vim74/doc/
cp SrcExpl-6.0/plugin/srcexpl.vim /usr/share/vim/vim74/plugin/
修改

4/Trinity插件(实现文件树这个功能)
去 https://www.vim.org/scripts/script.php?script_id=2347 下载zip
cp NERD_tree.vim  /usr/share/vim/vim74/plugin/
cp trinity.vim  /usr/share/vim/vim74/plugin/
然后修改
