gcc是linux上对c文件的编辑器(也可以用 cc 来作为gcc的简写)
	-E	预编译,将.c文件编成.i文件,去掉c文件中的注释,导入include,替换宏定义
	-S	编译,将.i文件转成汇编代码.s文件
	-c	汇编,将.s文件编程机器码.o文件
	-o	链接,用来指定输出文件.也做将多个文件转成可运行文件之用

	-I	指定包含的include文件
	-g	生成调试信息,使其可运行文件可以被gdb调试器调试
	-M	自动寻找依赖的include,生成依赖信息

文件名后缀.so代表“share object”，译为“共享对象”）。这些链接库一般位于 /lib/ 或 /usr/lib/，或者位于 GCC 默认搜索的其他目录。
当使用 GCC 编译和链接程序时，GCC 默认会链接 libc.a 或者 libc.so，但是对于其他的库（例如非标准库、第三方库等），就需要手动添加。
令人惊讶的是，标准头文件 <math.h> 对应的数学库默认也不会被链接，如果没有手动将它添加进来，就会发生函数未定义错误。
为了编译这个 带有include <math.h>的.c文件，必须使用-l选项，以链接数学库: gcc main.c -o main.out -lm

编译过程:
以c为例,由源文件到可执行文件的编译过程大致4个步骤:
	预处理---->编译---->汇编---->链接
	
	预处理:(去掉注释,替换宏定义,导入include,只保留纯正的代码)(生成 .i文件)
	gcc -E hello.c -o hello.i	//-E使GCC在进行完预处理后即停止,-o指定输出文件
		1/处理#define宏定义展开
		2/处理条件预编译指令#if #ifdef #elif #else #endif等
		3/处理#include,把包含文件插入到预编译位置
		4/删除注释
		5/添加行号和文件标识,以便编译出错时给出提示
		6/保留#pragma编译器指令
	编译:(编译成汇编语言)(生成 .s文件)
	gcc -S hello.i -o hello.s	//-S使GCC在执行完编译后停止
		把预处理完的文件进行一系列的词法分析，语法分析，语义分析及优化后生成相应的汇编代码。
	汇编:(汇编成机器码)(生成 .o文件)
	gcc -c hello.s -o hello.o	//-c使GCC在执行完汇编后停止
		汇编器是将汇编代码转变成机器可以执行的命令，每一个汇编语句几乎都对应一条机器指令。
	链接:(打包成可执行文件)(生成可执行文件)
	gcc hello.o -o hello		//将多个*.o的文件打包成一个可运行文件
		调用链接器ld来链接程序运行需要的一大堆目标文件，以及所依赖的其它库文件，最后生成可执行文件。
一步到位:
	gcc hello.c -o hello		//用.c生成可执行文件
或
	 gcc -o hello -g hello.c	//可执行文件由.c生成