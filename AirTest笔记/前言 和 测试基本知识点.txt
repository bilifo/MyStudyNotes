AirTest是网易提供的UI测试脚本,它的便利在于通过识别截图,来找到对应的功能.它是基于python的,本质上都是普通的Python脚本，可以根据自己的需求自由引入其他的Python库。

可以对android和ios,微信小程序,进行测试

根据测试方法来划分，可以分为:

    黑盒测试：最基础的功能测试，不关心内部的代码实现，而仅验证输入输出的正确性。
    白盒测试：基于逻辑驱动或者基于代码测试，打开代码内部的实现，去研究源代码中的接口或者具体实现的正确性。
    灰盒测试：介于二者之间的一种测试。

根据测试目标来划分，又可以分为:

    功能测试：对产品和模块的各个功能进行测试
    性能测试：对系统的各项性能指标进行测试
    压力测试：测试软件或系统的负载能力，挖掘隐患
    兼容性测试：对产品和软硬件之间的兼容性进行测试，比如软件在各种不同安卓机型上的兼容性。
    安全性测试：通过不同方法发现软件的安全性问题，比如信息泄露、非法使用、恶意破坏等等。
    其他专项测试：比如弱网络测试、耗电量测试、流畅度测试等等

根据软件开发阶段来划分，每个阶段又可以做:

    单元测试：对程序中的独立模块进行白盒测试，目的是检验软件基本组成单位的正确性
    集成测试：通过对单元模块进行组合测试，目的是验证单元模块之间的接口是否正确
    系统测试：对整个系统进行完整测试，验证整个系统的正确性与合规性
    回归测试：当软件发生变更的时候，对这次变更可能受影响的功能模块进行验证
    验收测试：测试的最后一个阶段，软件发布或者上线前确保软件质量

软件测试的自动化一般可以分为3层 * 代码层的单元测试 * 接口层的集成测试 * UI 层的测试
代码层的自动化:一般指针对代码进行的单元测试,比较常用的单元测试框架比如Java的Junit, Python的PyUnit等等
接口层的自动化:主要是对系统和组建之间的接口进行测试，主要目标是校验数据的交换和业务的流程，接口测试可以测试功能、也可以测试性能、测试压力、测试安全等等。由于接口比代码单元要稳定的很多，所以自动化脚本维护成本更低、收益也更大，具有不错的性价比。常用的测试工具有以下：
Jmeter：由Apache组织开发的基于Java的接口测试、压力测试和性能测试工具，起初为Web测试而设计，后来逐步扩展到其他领域，可以用来测试静态或者动态的资源。
LoadRunner:HP公司提供的一款性能测试和压力测试工具，可以通过模拟成千上万用户实施并发操作来测试系统性能，并且有详细的测试结果分析，是性能测试和压测的不错选择。
Robot Framework: 一款开源的自动化测试框架，具有很好的可扩展性。框架用python编写，同时也提供跨平台支持。
Postman:简单方便且功能强大的接口调试工具，API调试首选。
基于UI层的自动化测试框架要复杂很多，从平台种类来讲，有Windows，Linux,Android,Ios,Web,还有最新的小程序等等

Airtest Project组成:

    Airtest：基于Python的、跨平台的UI自动化测试框架，基于图像识别原理，适用于游戏和App。
    Poco：基于UI控件搜索的自动化测试框架，其核心优势是除了对Android、IOS之外，对游戏也是支持的，同时也支持微信小程序、微信小游戏和H5应用。





